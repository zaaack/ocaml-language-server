#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const shared_1 = require("../shared");
const feature = require("./feature");
const lifecycle = require("./lifecycle");
const request = require("./request");
const session_1 = require("./session");
const session = new session_1.default();
session.connection.onExit(lifecycle.exit(session));
session.connection.onInitialize(lifecycle.initialize(session));
session.connection.onShutdown(lifecycle.shutdown(session));
session.connection.onCodeAction(feature.codeAction(session));
session.connection.onDidChangeConfiguration(feature.didChangeConfiguration(session));
session.connection.onDocumentHighlight(feature.documentHighlight(session));
session.connection.onCodeLens(feature.codeLens(session));
session.connection.onCodeLensResolve(feature.codeLensResolve(session));
session.connection.onCompletion(feature.completion(session));
session.connection.onCompletionResolve(feature.completionResolve(session));
session.connection.onDefinition(feature.definition(session));
session.connection.onDidChangeWatchedFiles(feature.didChangeWatchedFiles(session));
session.connection.onDocumentFormatting(feature.documentFormatting(session));
session.connection.onDocumentOnTypeFormatting(feature.documentOnTypeFormatting(session));
session.connection.onDocumentSymbol(feature.documentSymbol(session));
session.connection.onHover(feature.hover(session));
session.connection.onReferences(feature.references(session));
session.connection.onRenameRequest(feature.rename(session));
session.connection.onWorkspaceSymbol(feature.workspaceSymbol(session));
session.connection.onRequest(shared_1.remote.server.giveCaseAnalysis, request.giveCaseAnalysis(session));
session.connection.onRequest(shared_1.remote.server.giveMerlinFiles, request.giveMerlinFiles(session));
session.connection.onRequest(shared_1.remote.server.giveFormatted, request.giveFormatted(session));
session.listen();
//# sourceMappingURL=index.js.map